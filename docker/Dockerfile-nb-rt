# Copyright (c) 2017-2018 Via Technology Ltd. All Rights Reserved.
# Consult your license regarding permissions and restrictions.

# Describes a pru jupyter docker image
# Based on the base notebook image.

FROM nb-base:0.3.0

LABEL maintainer="pete.marshall@via-technology.aero"

# The base location for python files
ARG PROJECT_HOME=/pru-python

# Base dir for pru files
ARG PRU_HOME=/pru

# What kind of deployment is it: int, ta, test etc
ARG DEPLOYMENT_TYPE=int

# The name of the PEM file.  See the secrets configuration 
ARG PEM_FILE=pem-file.json

#
# End of common args
#

# The default kind of deployment is int
ENV DEPLOYMENT_TYPE ${DEPLOYMENT_TYPE}

# The source code
ENV PROJECT_HOME ${PROJECT_HOME:-/pru-python}

ENV PYTHONPATH $PROJECT_HOME

ENV PRU_HOME ${PRU_HOME:-/pru}

ENV DATA_HOME /$DEPLOYMENT_TYPE/data

ENV NOTEBOOK_HOME $HOME/notebooks

ENV LOGGER_HOME $PRU_HOME/logging

ENV UPLOAD_DIR $DATA_HOME/upload

ENV REFINED_DIR $DATA_HOME/refined

ENV MERGED_DIR $DATA_HOME/merged

ENV PRODUCTS $DATA_HOME/products

ENV BACKUPS $DATA_HOME/backups

# We need to tell the app where to read the PEM file from.
ENV PEM_FILE $PRU_HOME/certs/${PEM_FILE:-pem-file.json}

USER root

RUN mkdir $PRU_HOME \
 && mkdir /$DEPLOYMENT_TYPE \
 && mkdir $DATA_HOME \
 && mkdir $DATA_HOME/airports \
 && mkdir $DATA_HOME/airports/stands \
 && mkdir $DATA_HOME/airspaces \
 && mkdir $DATA_HOME/upload \
 && mkdir $DATA_HOME/upload/cpr \
 && mkdir $DATA_HOME/upload/fr24 \
 && mkdir $DATA_HOME/upload/apds \
 && mkdir $DATA_HOME/products \
 && mkdir $DATA_HOME/refined \
 && mkdir $DATA_HOME/merged \
 && mkdir $DATA_HOME/analysis \
 && mkdir $DATA_HOME/fleet_data \
 && mkdir $LOGGER_HOME \
 && mkdir $LOGGER_HOME/logs \
 && mkdir $PROJECT_HOME \
 && mkdir $PROJECT_HOME/pru \
 && mkdir $PROJECT_HOME/apps \
 && mkdir $PROJECT_HOME/scripts \
 && mkdir $PROJECT_HOME/tools \
 && mkdir $NOTEBOOK_HOME

RUN chown -R 1000:100 $PRU_HOME /$DEPLOYMENT_TYPE 
 
VOLUME ["/int/data", "/pru/logging/logs"]

# NOTE COPY --chown=1000:100 fails unknown flag even though it documented!!
COPY --chown=1000:100 config/logging.yaml $LOGGER_HOME
COPY --chown=1000:100 pru $PROJECT_HOME/pru
COPY --chown=1000:100 apps $PROJECT_HOME/apps
COPY --chown=1000:100 scripts $PROJECT_HOME/scripts
COPY --chown=1000:100 tools $PROJECT_HOME/tools
COPY --chown=1000:100 notebooks $PRU_HOME/notebooks

RUN chown -R 1000:100 $LOGGER_HOME \
 && chown -R 1000:100 $DATA_HOME \
 && chown -R 1000:100 $PROJECT_HOME \
 && chown -R 1000:100 $PRU_HOME \
 && chmod -R ugo+x $PROJECT_HOME/apps \
 && chmod -R ugo+x $PROJECT_HOME/tools \
 && chown -R 1000:100 $PRU_HOME/notebooks\ 
 && chmod ug+r-w $PRU_HOME/notebooks/*.ipynb \
 && chown -R 1000:100 $NOTEBOOK_HOME

# Revert to USER jovyan, see: https://github.com/jupyter/docker-stacks/issues/188
USER $NB_UID
